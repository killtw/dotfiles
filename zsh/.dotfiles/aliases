# General
alias -g ..="cd .."
alias -g ...="cd ../.."
alias cat="bat"
alias ls="exa -bh --color=auto"

function mk() {
    mkdir -p "$@" && cd "$_";
}

# Docker
alias dc="docker-compose"
alias ctop="docker run --rm -ti --name ctop -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop:latest"
function docker-cleanup {
  EXITED=$(docker ps -q -f status=exited)
  DANGLING=$(docker images -q -f "dangling=true")

  if [ "$1" = "--dry-run" ]; then
    echo "==> Would stop containers:"
    echo $EXITED
    echo "==> And images:"
    echo $DANGLING
  else
    if [ -n "$EXITED" ]; then
      docker rm -f $EXITED
    else
      echo "No containers to remove."
    fi
    if [ -n "$DANGLING" ]; then
      docker rmi -f $DANGLING
    else
      echo "No images to remove."
    fi
  fi
}


# PHP
alias x="composer"
alias art="php artisan"

function tinker() {
    if [ -e "artisan" ] ; then
        if [ -z "$1" ] ; then
            php artisan tinker
        else
            php artisan tinker --execute="dd($1);"
        fi
    fi
    [ -e "Rakefile" ] && bundle exec rails c
}

function migrate() {
  [ -e "artisan" ] && php artisan migrate "$@"
  [ -e "Rakefile" ] && bundle exec rake db:migrate "$@"
}

function rollback() {
  [ -e "artisan" ] && php artisan migrate:rollback "$@"
  [ -e "Rakefile" ] && bundle exec rake db:rollback "$@"
}

function phpunit {
    [ -e "vendor/bin/phpunit" ] && vendor/bin/phpunit "$@"
    [[ -x "$(command -v phpunit)" ]] && phpunit "$@"
}
