# Tmux Settings
#
# By Far Tseng


# ------------------------------------------
# Settings
# ------------------------------------------

set -g escape-time 0
set -g base-index 1
set -g bell-action any
set -g default-terminal "screen-256color" # + "tmux -2" => 256 color
set -g history-limit 50000
set -g lock-after-time 1800
set -g lock-command vlock
set -g set-titles on
set -g set-titles-string "#(tmux ls | awk -F: '{print $1}' | xargs | sed 's/\ / | /g')"
set -g update-environment -r
set -g visual-activity off
set -g visual-bell on
set -g display-panes-time 2000
# set -g visual-content on
set -g xterm-keys on

setw -g mode-keys vi
#setw -g utf8 on
setw -g allow-rename on
setw -g aggressive-resize off
setw -g clock-mode-colour colour64
setw -g clock-mode-style 24
setw -g automatic-rename on
setw -g monitor-activity off

set -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

## Support Mouse
set -g mouse on
#setw -g mode-mouse off 
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on
#set -g mouse-utf8 on


# ------------------------------------------
# Themes
#
# Set status line message command style, where style is a comma-separated list of characteristics
# to be specified. 
#
# These may be ‘bg=colour’ to set the background colour, ‘fg=colour’ to set the
# foreground colour, and a list of attributes as specified below.
#
# The colour is one of: black, red, green, yellow, blue, magenta, cyan, white, aixterm bright
# variants (if supported: brightred, brightgreen, and so on), colour0 to colour255 from the
# 256-colour set, default, or a hexadecimal RGB string such as ‘#ffffff’, which chooses the
# closest match from the default 256-colour set.
#
# The attributes is either none or a comma-delimited list of one or more of: bright (or bold),
# dim, underscore, blink, reverse, hidden, or italics, to turn an attribute on, or an attribute
# prefixed with ‘no’ to turn one off.
#
# Examples are:
#
#   fg=yellow,bold,underscore,blink 
#   bg=black,fg=default,noreverse
#
# With the -a flag to the set-option command the new style is added otherwise the existing 
# style is replaced.
# ------------------------------------------

# message
set -ag message-style fg=colour166,bg=colour235
#
## pane
set -ag pane-border-style fg=colour238
set -ag pane-active-border-style fg=colour6
#
## status line
if-shell 'test -z "$POWERLINE_COMMAND"' 'if-shell "which powerline-client" "set-environment -g POWERLINE_COMMAND powerline-client" "set-environment -g POWERLINE_COMMAND powerline"'
set -g status on
#set -g status-utf8 on
set -g status-interval 10
set -g status-style bg=colour234
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]#(eval $POWERLINE_COMMAND tmux left)'
set -g status-left-length 50
set -g status-left-style fg=colour231,bg=colour234
set -g status-right '#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p "#D"`)'
set -g status-right-length 150
setw -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240] #[fg=colour249]#W "
setw -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"




# ------------------------------------------
# Key Bindings
# ------------------------------------------
# Set the prefix to ^A
unbind C-b
set -g prefix C-a

## Command Sequence for Nested Tmux Sessions
## 當你 Tmux 裏有 Tmux 時使用
bind-key a send-prefix

# last active window ^A
unbind ^A
bind ^A last-window

# new window ^C c
unbind ^C
bind ^C new-window -c "#{pane_current_path}"
unbind c
bind c new-window -c "#{pane_current_path}"

# detach ^D d
unbind ^D
bind ^D detach

# next ^N space n
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# prev ^P p BackSpace
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# rename title A
unbind A
bind A command-prompt "rename-window %%"

# kill window K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# split window
## horizontal |
unbind |
bind | split-window -h -c "#{pane_current_path}"
## virtical /
unbind /
bind / split-window -v -c "#{pane_current_path}"

# resize panes like vim
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# reflash config
bind r source-file ~/.tmux.conf \; display-message " Config reload.."

# if run as "tmux attach", create a session if one does not already exist
new-session -n $HOST
